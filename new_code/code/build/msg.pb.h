// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_INCLUDED_msg_2eproto
#define PROTOBUF_INCLUDED_msg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_2eproto 

namespace protobuf_msg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_2eproto
class MyLoginMsg;
class MyLoginMsgDefaultTypeInternal;
extern MyLoginMsgDefaultTypeInternal _MyLoginMsg_default_instance_;
class MyMsgHead;
class MyMsgHeadDefaultTypeInternal;
extern MyMsgHeadDefaultTypeInternal _MyMsgHead_default_instance_;
namespace google {
namespace protobuf {
template<> ::MyLoginMsg* Arena::CreateMaybeMessage<::MyLoginMsg>(Arena*);
template<> ::MyMsgHead* Arena::CreateMaybeMessage<::MyMsgHead>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class MyMsgHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MyMsgHead) */ {
 public:
  MyMsgHead();
  virtual ~MyMsgHead();

  MyMsgHead(const MyMsgHead& from);

  inline MyMsgHead& operator=(const MyMsgHead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MyMsgHead(MyMsgHead&& from) noexcept
    : MyMsgHead() {
    *this = ::std::move(from);
  }

  inline MyMsgHead& operator=(MyMsgHead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MyMsgHead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MyMsgHead* internal_default_instance() {
    return reinterpret_cast<const MyMsgHead*>(
               &_MyMsgHead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MyMsgHead* other);
  friend void swap(MyMsgHead& a, MyMsgHead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MyMsgHead* New() const final {
    return CreateMaybeMessage<MyMsgHead>(NULL);
  }

  MyMsgHead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MyMsgHead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MyMsgHead& from);
  void MergeFrom(const MyMsgHead& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyMsgHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 dataLen = 2;
  void clear_datalen();
  static const int kDataLenFieldNumber = 2;
  ::google::protobuf::int32 datalen() const;
  void set_datalen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MyMsgHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 datalen_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MyLoginMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MyLoginMsg) */ {
 public:
  MyLoginMsg();
  virtual ~MyLoginMsg();

  MyLoginMsg(const MyLoginMsg& from);

  inline MyLoginMsg& operator=(const MyLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MyLoginMsg(MyLoginMsg&& from) noexcept
    : MyLoginMsg() {
    *this = ::std::move(from);
  }

  inline MyLoginMsg& operator=(MyLoginMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MyLoginMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MyLoginMsg* internal_default_instance() {
    return reinterpret_cast<const MyLoginMsg*>(
               &_MyLoginMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MyLoginMsg* other);
  friend void swap(MyLoginMsg& a, MyLoginMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MyLoginMsg* New() const final {
    return CreateMaybeMessage<MyLoginMsg>(NULL);
  }

  MyLoginMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MyLoginMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MyLoginMsg& from);
  void MergeFrom(const MyLoginMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyLoginMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .MyMsgHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  private:
  const ::MyMsgHead& _internal_head() const;
  public:
  const ::MyMsgHead& head() const;
  ::MyMsgHead* release_head();
  ::MyMsgHead* mutable_head();
  void set_allocated_head(::MyMsgHead* head);

  // int32 age = 3;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MyLoginMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::MyMsgHead* head_;
  ::google::protobuf::int32 age_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MyMsgHead

// int32 cmd = 1;
inline void MyMsgHead::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 MyMsgHead::cmd() const {
  // @@protoc_insertion_point(field_get:MyMsgHead.cmd)
  return cmd_;
}
inline void MyMsgHead::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:MyMsgHead.cmd)
}

// int32 dataLen = 2;
inline void MyMsgHead::clear_datalen() {
  datalen_ = 0;
}
inline ::google::protobuf::int32 MyMsgHead::datalen() const {
  // @@protoc_insertion_point(field_get:MyMsgHead.dataLen)
  return datalen_;
}
inline void MyMsgHead::set_datalen(::google::protobuf::int32 value) {
  
  datalen_ = value;
  // @@protoc_insertion_point(field_set:MyMsgHead.dataLen)
}

// -------------------------------------------------------------------

// MyLoginMsg

// .MyMsgHead head = 1;
inline bool MyLoginMsg::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
inline void MyLoginMsg::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) {
    delete head_;
  }
  head_ = NULL;
}
inline const ::MyMsgHead& MyLoginMsg::_internal_head() const {
  return *head_;
}
inline const ::MyMsgHead& MyLoginMsg::head() const {
  const ::MyMsgHead* p = head_;
  // @@protoc_insertion_point(field_get:MyLoginMsg.head)
  return p != NULL ? *p : *reinterpret_cast<const ::MyMsgHead*>(
      &::_MyMsgHead_default_instance_);
}
inline ::MyMsgHead* MyLoginMsg::release_head() {
  // @@protoc_insertion_point(field_release:MyLoginMsg.head)
  
  ::MyMsgHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline ::MyMsgHead* MyLoginMsg::mutable_head() {
  
  if (head_ == NULL) {
    auto* p = CreateMaybeMessage<::MyMsgHead>(GetArenaNoVirtual());
    head_ = p;
  }
  // @@protoc_insertion_point(field_mutable:MyLoginMsg.head)
  return head_;
}
inline void MyLoginMsg::set_allocated_head(::MyMsgHead* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    
  } else {
    
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:MyLoginMsg.head)
}

// string name = 2;
inline void MyLoginMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyLoginMsg::name() const {
  // @@protoc_insertion_point(field_get:MyLoginMsg.name)
  return name_.GetNoArena();
}
inline void MyLoginMsg::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MyLoginMsg.name)
}
#if LANG_CXX11
inline void MyLoginMsg::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MyLoginMsg.name)
}
#endif
inline void MyLoginMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MyLoginMsg.name)
}
inline void MyLoginMsg::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MyLoginMsg.name)
}
inline ::std::string* MyLoginMsg::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MyLoginMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyLoginMsg::release_name() {
  // @@protoc_insertion_point(field_release:MyLoginMsg.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyLoginMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MyLoginMsg.name)
}

// int32 age = 3;
inline void MyLoginMsg::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 MyLoginMsg::age() const {
  // @@protoc_insertion_point(field_get:MyLoginMsg.age)
  return age_;
}
inline void MyLoginMsg::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:MyLoginMsg.age)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_2eproto
